{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Louliett\\\\Documents\\\\Projects\\\\react_n8\\\\admin\\\\src\\\\components\\\\containers\\\\AdminFormContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { AdminForm } from '../representational/AdminForm.jsx';\nexport function AdminFormContainer(props) {\n  _s();\n\n  const [inputs, setInputs] = useState({\n    email: \"\",\n    password: \"\"\n  });\n\n  function handleChange(event) {\n    console.log(event.target.value.length, \"length\");\n\n    if (event.target.value.length !== 0) {\n      setInputs(inputs => ({ ...inputs,\n        [event.target.name]: event.target.value\n      }));\n    }\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    fetchUser(inputs).then(user => {\n      console.log(user.exists);\n    });\n  }\n\n  async function fetchUser(user) {\n    var myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n    var raw = JSON.stringify(user);\n    var requestOptions = {\n      method: 'POST',\n      headers: myHeaders,\n      body: raw,\n      redirect: 'follow'\n    };\n    let response = await fetch(\"http://localhost:8080/users/login\", requestOptions);\n    let message = await response.json();\n    return message;\n  }\n\n  return /*#__PURE__*/_jsxDEV(AdminForm, {\n    inputs: inputs,\n    onSubmit: handleSubmit,\n    onChange: handleChange\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 14\n  }, this);\n}\n\n_s(AdminFormContainer, \"Nrw4eOw203hsgcHsck2Uq57WJ0E=\");\n\n_c = AdminFormContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminFormContainer\");","map":{"version":3,"sources":["C:/Users/Louliett/Documents/Projects/react_n8/admin/src/components/containers/AdminFormContainer.js"],"names":["React","useState","useEffect","AdminForm","AdminFormContainer","props","inputs","setInputs","email","password","handleChange","event","console","log","target","value","length","name","handleSubmit","preventDefault","fetchUser","then","user","exists","myHeaders","Headers","append","raw","JSON","stringify","requestOptions","method","headers","body","redirect","response","fetch","message","json"],"mappings":";;;;;AAAA,OAAOA,KAAP,IACIC,QADJ,EAEIC,SAFJ,QAGO,OAHP;AAIA,SACIC,SADJ,QAEO,mCAFP;AAIA,OAAO,SAASC,kBAAT,CAA4BC,KAA5B,EAAmC;AAAA;;AAEtC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC;AACjCO,IAAAA,KAAK,EAAE,EAD0B;AAEjCC,IAAAA,QAAQ,EAAE;AAFuB,GAAD,CAApC;;AAKA,WAASC,YAAT,CAAsBC,KAAtB,EAA6B;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAaF,KAAK,CAACG,MAAN,CAAaC,KAAd,CAAqBC,MAAjC,EAAyC,QAAzC;;AACA,QAAKL,KAAK,CAACG,MAAN,CAAaC,KAAd,CAAqBC,MAArB,KAAgC,CAApC,EAAuC;AACnCT,MAAAA,SAAS,CAACD,MAAM,KAAK,EACjB,GAAGA,MADc;AAEjB,SAACK,KAAK,CAACG,MAAN,CAAaG,IAAd,GAAqBN,KAAK,CAACG,MAAN,CAAaC;AAFjB,OAAL,CAAP,CAAT;AAIH;AAEJ;;AAED,WAASG,YAAT,CAAsBP,KAAtB,EAA6B;AACzBA,IAAAA,KAAK,CAACQ,cAAN;AACAC,IAAAA,SAAS,CAACd,MAAD,CAAT,CACKe,IADL,CACWC,IAAD,IAAU;AACZV,MAAAA,OAAO,CAACC,GAAR,CAAYS,IAAI,CAACC,MAAjB;AAEH,KAJL;AAKH;;AAED,iBAAeH,SAAf,CAAyBE,IAAzB,EAA+B;AAC3B,QAAIE,SAAS,GAAG,IAAIC,OAAJ,EAAhB;AACAD,IAAAA,SAAS,CAACE,MAAV,CAAiB,cAAjB,EAAiC,kBAAjC;AAEA,QAAIC,GAAG,GAAGC,IAAI,CAACC,SAAL,CAAeP,IAAf,CAAV;AAEA,QAAIQ,cAAc,GAAG;AACjBC,MAAAA,MAAM,EAAE,MADS;AAEjBC,MAAAA,OAAO,EAAER,SAFQ;AAGjBS,MAAAA,IAAI,EAAEN,GAHW;AAIjBO,MAAAA,QAAQ,EAAE;AAJO,KAArB;AAOA,QAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAD,EAAsCN,cAAtC,CAA1B;AACA,QAAIO,OAAO,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAApB;AACA,WAAOD,OAAP;AACH;;AAED,sBAAS,QACL,SADK;AACK,IAAA,MAAM,EACZ/B,MAFC;AAIL,IAAA,QAAQ,EACJY,YALC;AAOL,IAAA,QAAQ,EACJR;AARC;AAAA;AAAA;AAAA;AAAA,UAAT;AAaH;;GA1DeN,kB;;KAAAA,kB","sourcesContent":["import React, {\r\n    useState,\r\n    useEffect\r\n} from 'react';\r\nimport {\r\n    AdminForm\r\n} from '../representational/AdminForm.jsx'\r\n\r\nexport function AdminFormContainer(props) {\r\n\r\n    const [inputs, setInputs] = useState({\r\n        email: \"\",\r\n        password: \"\"\r\n    });\r\n\r\n    function handleChange(event) {\r\n        console.log((event.target.value).length, \"length\");\r\n        if ((event.target.value).length !== 0) {\r\n            setInputs(inputs => ({\r\n                ...inputs,\r\n                [event.target.name]: event.target.value\r\n            }));\r\n        }\r\n\r\n    }\r\n\r\n    function handleSubmit(event) {\r\n        event.preventDefault();\r\n        fetchUser(inputs)\r\n            .then((user) => {\r\n                console.log(user.exists);\r\n                \r\n            });\r\n    }\r\n\r\n    async function fetchUser(user) {\r\n        var myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n        var raw = JSON.stringify(user);\r\n\r\n        var requestOptions = {\r\n            method: 'POST',\r\n            headers: myHeaders,\r\n            body: raw,\r\n            redirect: 'follow'\r\n        };\r\n\r\n        let response = await fetch(\"http://localhost:8080/users/login\", requestOptions);\r\n        let message = await response.json();\r\n        return message;\r\n    }\r\n\r\n    return ( <\r\n        AdminForm inputs = {\r\n            inputs\r\n        }\r\n        onSubmit = {\r\n            handleSubmit\r\n        }\r\n        onChange = {\r\n            handleChange\r\n        }\r\n        />\r\n    );\r\n\r\n}"]},"metadata":{},"sourceType":"module"}